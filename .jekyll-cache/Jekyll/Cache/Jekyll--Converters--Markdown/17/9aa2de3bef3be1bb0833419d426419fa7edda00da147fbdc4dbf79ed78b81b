I"<p>I bought a cheap USB stick to nrf24l01 adapter on aliexpress.</p>

<p>An alternative is to use a arduino nano or something with the <a href="https://github.com/TMRh20/RF24">https://github.com/TMRh20/RF24</a></p>

<p>Would be much more flexible too.</p>

<p>However the convenience of just being able to pop in the little man is nice.</p>

<p>They module plugs in pointing away from the usb port. Red and Blue LEDs turn on.</p>

<p>Documentation is very poor. But apparently takes AT commands</p>

<p>I found this on a french ebay site.</p>

<p><a href="http://www.ebay.fr/itm/NRF24L01-USB-adapter-adaptateur-USB-2-4Ghz-pour-NRF24L01-UART-2-4G-NRF24L01-/272081225026">http://www.ebay.fr/itm/NRF24L01-USB-adapter-adaptateur-USB-2-4Ghz-pour-NRF24L01-UART-2-4G-NRF24L01-/272081225026</a></p>

<p>Seems to be accurate. The actual seller I got it from suggested AT+ADD to set address which does not work</p>

<blockquote>AT Commands
Baudrate : AT+BAUD=n where n =  1-6 (1:4800,2:9600,3:14400,4:19200,5:38400,6:115200) (default 9600Kbps)
NRF Rate : AT+RATE=n where n =  1-3 (1:250K, 2:1M, 3:2M ) (default 2Mbps)
Local Address : AT+RXA=0Xnn,0Xnn,0Xnn,0Xnn,0Xnn where nn are the local receiving address (default 0xff,0xff,0xff,0xff,0xff)
Target Address  : AT+TXA=0Xnn,0Xnn,0Xnn,0Xnn,0Xnn where nn are the target address
Operating Freq. : AT+FREQ=2.nnnG where nnn = 400 / 525 (default 2.400G)
Checksum mode : AT+CRC=n where n = 8 /16 (default : 16 bit)
System info : AT?</blockquote>

<p>AT? gets</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ϵͳ��Ϣ��
�����ʣ�9600
Ŀ��Է���ַ�� 0xFF,0xFF,0xFF,0xFF,0xFF
���ؽ��յ�ַ0��0xFF,0xFF,0xFF,0xFF,0xFF
����Ƶ�ʣ�2.400GHz
У�鷽ʽ��16λCRCУ��
���书�ʣ�0dBm
���д������ʣ�2Mbps
�������Ŵ����棺����
</code></pre></div></div>

<p>Probably that is Chinese. But we can get some guesses. What each of those means. The second address is RX, the first is TX. I checked by changing them with AT+RXA= commands</p>

<p>It has an STC chip on it STC11L04E. They’ve included source that does not accept AT commands, so is there a way to reprogram the chip? after looking at the datasheet seems plausible, but not worth the energy.</p>

<p>And the usb to serial chip is the ubiquitous CH340.</p>

<p>Put it on two computers. Or on the same comp.</p>

<p>In two windows type</p>

<p>screen /dev/cu.wchblah blah blah 9600</p>

<p>where the blah blah blah can be found using ls/dev and finding the full device name</p>

<p>Typing in just pipes it right over to the other man (9600baud). Pretty good.</p>

<p>Edit: Check out Pete’s post below for more info. Apparently there are version differences between boards</p>

:ET