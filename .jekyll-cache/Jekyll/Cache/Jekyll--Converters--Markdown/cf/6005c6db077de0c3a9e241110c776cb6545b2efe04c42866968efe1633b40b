I"?<p>I’m using an arduino nano.</p>

<p>Way easier than wiring up my own bullcrap, even though I’ve got some raw chips and a programmer on hand.</p>

<p>Here’s a short makefile that will get stuff to happen. You’ll need to replace /dev/tty0USB0 with wherever you’re device actually is.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>TARGET=led

all: $(TARGET).c
	avr-gcc -Os -DF_CPU=16000000UL -mmcu=atmega328p -c -o $(TARGET).o $(TARGET).c
	avr-gcc -mmcu=atmega328p $(TARGET).o -o $(TARGET)
	avr-objcopy -O ihex -R .eeprom $(TARGET) $(TARGET).hex

flash: $(TARGET).hex
	avrdude -F -V -c arduino -p ATMEGA328P -P /dev/ttyUSB0 -b 57600  -U flash:w:$(TARGET).hex
</code></pre></div></div>

<p><a href="https://balau82.wordpress.com/2011/03/29/programming-arduino-uno-in-pure-c/">This</a> was useful in figuring out how to make this makefile.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#include &lt;avr/io.h&gt;

int main(void)
{
    // connect led to pin PC0
    DDRB |= (1 &lt;&lt; 0);
    while(1)
    {
        PORTB ^= (0xFF &lt;&lt; 0);    // toggles the led
    }
}
</code></pre></div></div>

<p>This makes a fast switching program just to see what we can pump out. I measure 1.6Mhz</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>avr-objdump -m avr -D fastswitch.hex &gt; assembly
</code></pre></div></div>

<p>Also</p>

<p>Adafruit Shield version 1 works on my chinese DK electornics board. Nice.</p>

:ET